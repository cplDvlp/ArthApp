{"remainingRequest":"/Users/cesitarpl/Desktop/Informática/Proyectos/Blockchain/Juegos/6-ArthApp/arthApp/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/cesitarpl/Desktop/Informática/Proyectos/Blockchain/Juegos/6-ArthApp/arthApp/src/views/Calculate.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/cesitarpl/Desktop/Informática/Proyectos/Blockchain/Juegos/6-ArthApp/arthApp/src/views/Calculate.vue","mtime":1640085353842},{"path":"/Users/cesitarpl/Desktop/Informática/Proyectos/Blockchain/Juegos/6-ArthApp/arthApp/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/cesitarpl/Desktop/Informática/Proyectos/Blockchain/Juegos/6-ArthApp/arthApp/node_modules/babel-loader/lib/index.js","mtime":315532800000},{"path":"/Users/cesitarpl/Desktop/Informática/Proyectos/Blockchain/Juegos/6-ArthApp/arthApp/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/cesitarpl/Desktop/Informática/Proyectos/Blockchain/Juegos/6-ArthApp/arthApp/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n\nimport { mapGetters } from \"vuex\";\n\nexport default {\n  name: \"calculate\",\n  data() {\n    return {\n      life: 3,\n      randomNumber1: 1,\n      randomNumber2: 1,\n      check: false,\n      show: 0,\n      operator: \"\",\n      question: \"\",\n      answer: 0,\n      min: 1,\n      max: 99,\n      counter: 0,\n      arrayAnswer: [],\n      gameOver: false,\n      timerCount: 10,\n      time: 0,\n    };\n  },\n  created: function () {\n    this.getRandomNumber();\n    this.countDownTimer();\n    this.countUpTimer();\n  },\n  watch: {},\n  computed: mapGetters(\"drizzle\", [\"isDrizzleInitialized\"]),\n  methods: {\n    newGame() {\n          this.life = this.life = 3;\n          this.counter = 0;\n          this.time = 0;\n          this.timerCount = 10;\n          this.gameOver = false;\n          this.countUpTimer();\n    },\n    nextOperation: function (answer) {\n      if (answer == this.answer) {\n        // Respuesta correcta\n        this.counter = this.counter + this.timerCount;\n        this.check = true;\n        this.show = 2;\n      } else {\n        // Respuesta incorrecta\n        this.check = false;\n        this.show = 2;\n        this.life = this.life - 1;\n        if (this.life == 0) {\n          // Fin de la partida\n          this.gameOver = true;\n        }\n      }\n      this.arrayAnswer = [];\n      this.getRandomNumber();\n    },\n    getRandomNumber: function () {\n      this.randomNumber1 = this.generateNumber(this.min, this.max);\n      this.randomNumber2 = this.generateNumber(this.min, this.max);\n      if (this.randomNumber1 >= this.randomNumber2) {\n        this.question = this.randomNumber1 + \" + \" + this.randomNumber2;\n        this.answer = this.randomNumber1 + this.randomNumber2;\n      } else {\n        this.question = this.randomNumber2 + \" + \" + this.randomNumber1;\n        this.answer = this.randomNumber2 + this.randomNumber1;\n      }\n\n      this.arrayAnswer = this.checkEqualNumber(this.answer);\n    },\n    checkEqualNumber(answer) {\n      let arrayFinal = [];\n      let newNumber = this.generateNumber(this.answer - 3, this.answer + 3);\n      while (newNumber == answer) {\n        newNumber = this.generateNumber(this.answer - 4, this.answer + 4);\n      }\n      let newNumber2 = this.generateNumber(this.answer - 3, this.answer + 3);\n      while (newNumber2 == answer || newNumber2 == newNumber) {\n        newNumber2 = this.generateNumber(this.answer - 3, this.answer + 3);\n      }\n      arrayFinal.push(answer, newNumber, newNumber2);\n      this.shuffleArray(arrayFinal);\n      return arrayFinal;\n    },\n    generateNumber: function (min, max) {\n      return Math.floor(Math.random() * (max - min + 1) + min);\n    },\n    shuffleArray(arrayAnswer) {\n      arrayAnswer.sort(() => Math.random() - 0.5);\n    },\n    button1() {\n      this.nextOperation(this.arrayAnswer[0]);\n      this.timerCount = 10\n    },\n    button2() {\n      this.nextOperation(this.arrayAnswer[1]);\n      this.timerCount = 10\n    },\n    button3() {\n      this.nextOperation(this.arrayAnswer[2]);\n      this.timerCount = 10\n    },\n    countDownTimer() {\n      if (this.timerCount > 0) {\n        setTimeout(() => {\n          this.timerCount -= 1;\n          this.countDownTimer();\n        }, 1000);\n      }\n    },\n    countUpTimer() {\n      if (!this.gameOver) {\n        setTimeout(() => {\n          this.time += 10;\n          this.countUpTimer();\n        }, 100);\n      }\n    },\n  },\n};\n",{"version":3,"sources":["Calculate.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AA2CA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"Calculate.vue","sourceRoot":"src/views","sourcesContent":["<template>\n  <div>\n    <br />\n    <div v-for=\"lifes in life\" :key=\"lifes\">\n      ♡\n    </div>\n    <br />\n    <div>{{ time }} || {{ timerCount }}</div>\n    <br />\n    <p style=\"font-size: 30px\">{{ randomNumber1 }} + {{ randomNumber2 }}</p>\n    <div justify=\"center\">\n      <b-button size=\"lg\" variant=\"outline-dark\" @click=\"button1()\">{{\n        arrayAnswer[0]\n      }}</b-button>\n      <b-button size=\"lg\" variant=\"outline-dark\" @click=\"button2()\">{{\n        arrayAnswer[1]\n      }}</b-button>\n      <b-button size=\"lg\" variant=\"outline-dark\" @click=\"button3()\">{{\n        arrayAnswer[2]\n      }}</b-button>\n    </div>\n    <b-modal v-model=\"gameOver\" title=\"Fin del juego\"\n      @ok=\"newGame()\">\n      <!-- @show=\"$router.push('/')\"\n      @cancel=\"$router.push('/')\"\n      @hidden=\"$router.push('/')\" -->\n      <p>Se termino la partida</p>\n      <br />\n      PUNTUACIÓN FINAL: {{ counter }}\n      TIEMPO FINAL: {{ time }}\n    </b-modal>\n    <br />\n    <div>PUNTUACION: {{ counter }}</div>\n\n    <br />\n    <router-link to=\"/\">\n      <b-button size=\"lg\" pill>Back</b-button>\n    </router-link>\n    <router-view />\n  </div>\n</template>\n\n<script>\nimport { mapGetters } from \"vuex\";\n\nexport default {\n  name: \"calculate\",\n  data() {\n    return {\n      life: 3,\n      randomNumber1: 1,\n      randomNumber2: 1,\n      check: false,\n      show: 0,\n      operator: \"\",\n      question: \"\",\n      answer: 0,\n      min: 1,\n      max: 99,\n      counter: 0,\n      arrayAnswer: [],\n      gameOver: false,\n      timerCount: 10,\n      time: 0,\n    };\n  },\n  created: function () {\n    this.getRandomNumber();\n    this.countDownTimer();\n    this.countUpTimer();\n  },\n  watch: {},\n  computed: mapGetters(\"drizzle\", [\"isDrizzleInitialized\"]),\n  methods: {\n    newGame() {\n          this.life = this.life = 3;\n          this.counter = 0;\n          this.time = 0;\n          this.timerCount = 10;\n          this.gameOver = false;\n          this.countUpTimer();\n    },\n    nextOperation: function (answer) {\n      if (answer == this.answer) {\n        // Respuesta correcta\n        this.counter = this.counter + this.timerCount;\n        this.check = true;\n        this.show = 2;\n      } else {\n        // Respuesta incorrecta\n        this.check = false;\n        this.show = 2;\n        this.life = this.life - 1;\n        if (this.life == 0) {\n          // Fin de la partida\n          this.gameOver = true;\n        }\n      }\n      this.arrayAnswer = [];\n      this.getRandomNumber();\n    },\n    getRandomNumber: function () {\n      this.randomNumber1 = this.generateNumber(this.min, this.max);\n      this.randomNumber2 = this.generateNumber(this.min, this.max);\n      if (this.randomNumber1 >= this.randomNumber2) {\n        this.question = this.randomNumber1 + \" + \" + this.randomNumber2;\n        this.answer = this.randomNumber1 + this.randomNumber2;\n      } else {\n        this.question = this.randomNumber2 + \" + \" + this.randomNumber1;\n        this.answer = this.randomNumber2 + this.randomNumber1;\n      }\n\n      this.arrayAnswer = this.checkEqualNumber(this.answer);\n    },\n    checkEqualNumber(answer) {\n      let arrayFinal = [];\n      let newNumber = this.generateNumber(this.answer - 3, this.answer + 3);\n      while (newNumber == answer) {\n        newNumber = this.generateNumber(this.answer - 4, this.answer + 4);\n      }\n      let newNumber2 = this.generateNumber(this.answer - 3, this.answer + 3);\n      while (newNumber2 == answer || newNumber2 == newNumber) {\n        newNumber2 = this.generateNumber(this.answer - 3, this.answer + 3);\n      }\n      arrayFinal.push(answer, newNumber, newNumber2);\n      this.shuffleArray(arrayFinal);\n      return arrayFinal;\n    },\n    generateNumber: function (min, max) {\n      return Math.floor(Math.random() * (max - min + 1) + min);\n    },\n    shuffleArray(arrayAnswer) {\n      arrayAnswer.sort(() => Math.random() - 0.5);\n    },\n    button1() {\n      this.nextOperation(this.arrayAnswer[0]);\n      this.timerCount = 10\n    },\n    button2() {\n      this.nextOperation(this.arrayAnswer[1]);\n      this.timerCount = 10\n    },\n    button3() {\n      this.nextOperation(this.arrayAnswer[2]);\n      this.timerCount = 10\n    },\n    countDownTimer() {\n      if (this.timerCount > 0) {\n        setTimeout(() => {\n          this.timerCount -= 1;\n          this.countDownTimer();\n        }, 1000);\n      }\n    },\n    countUpTimer() {\n      if (!this.gameOver) {\n        setTimeout(() => {\n          this.time += 10;\n          this.countUpTimer();\n        }, 100);\n      }\n    },\n  },\n};\n</script>\n\n<style></style>"]}]}